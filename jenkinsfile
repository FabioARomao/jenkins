pipeline {
    agent any

    environment {
        // Definir variáveis de ambiente, como o nome do ambiente virtual
        VENV_DIR = 'venv'
    }

    stages {
        stage('Preparar Ambiente') {
            steps {
                script {
                    // Instalar dependências e configurar o ambiente virtual
                    sh '''
                        # Atualizar repositórios e instalar dependências
                        apt-get update && apt-get install -y python3.11-venv python3-pip

                        # Criar e ativar o ambiente virtual
                        python3 -m venv ${VENV_DIR}
                        source ${VENV_DIR}/bin/activate

                        # Atualizar o pip
                        pip install --upgrade pip
                    '''
                }
            }
        }

        stage('Instalar Dependências') {
            steps {
                script {
                    // Instalar dependências do arquivo requirements.txt
                    sh '''
                        source ${VENV_DIR}/bin/activate
                        pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Rodar Testes') {
            steps {
                script {
                    // Rodar os testes com pytest (ajuste conforme sua necessidade)
                    sh '''
                        source ${VENV_DIR}/bin/activate
                        pytest --maxfail=1 --disable-warnings -q
                    '''
                }
            }
        }

        stage('Gerar Relatório de Testes') {
            steps {
                script {
                    // Gerar relatório de testes (por exemplo, em formato JUnit)
                    sh '''
                        source ${VENV_DIR}/bin/activate
                        pytest --maxfail=1 --disable-warnings --junitxml=resultados.xml
                    '''
                }
            }
        }

        stage('Publicar Relatório') {
            steps {
                junit '**/resultados.xml'  // Publicar o relatório de testes no Jenkins
            }
        }

        stage('Deploy') {
            when {
                branch 'main'  // Só rodar o deploy se for o branch 'main'
            }
            steps {
                script {
                    // Comandos de deploy (ajuste conforme sua infraestrutura)
                    echo 'Deploying application...'
                    // Exemplo: Deploy para servidor ou integração com AWS, Kubernetes, etc.
                    // sh './deploy.sh'
                }
            }
        }
    }

    post {
        always {
            // Limpeza ou ações sempre executadas, como desativar o ambiente virtual
            sh 'deactivate || true'
        }
        success {
            // Ações que ocorrem em caso de sucesso, como enviar uma notificação
            echo 'Pipeline executada com sucesso!'
        }
        failure {
            // Ações que ocorrem em caso de falha
            echo 'Pipeline falhou.'
        }
    }
}
